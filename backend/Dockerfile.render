# Render-optimized Dockerfile using api.py
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    libpq-dev \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Install UV package manager
RUN pip install uv

# Copy dependency files and README
COPY pyproject.toml uv.lock README.md ./

# Explicitly install psycopg2-binary first to avoid compilation issues
RUN uv pip install --system psycopg2-binary==2.9.10

# Install dependencies (no need for editable install in production)
RUN uv sync --no-dev --no-editable

# Copy application code
COPY . .

# Generate Prisma client
RUN uv run prisma generate

# Create required directories
RUN mkdir -p outputs research_papers db logs

# Expose port
EXPOSE 8001

# Set environment variables
ENV PYTHONPATH=/app
ENV PORT=8001

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Run the application explicitly using api.py
CMD ["uv", "run", "uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8001"]
