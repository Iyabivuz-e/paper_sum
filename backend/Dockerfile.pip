# Alternative Dockerfile using pip (backup for Render deployment)
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies including PostgreSQL development headers
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    libpq-dev \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements.txt ./

# Install psycopg2-binary first to avoid any compilation issues
RUN pip install --no-cache-dir psycopg2-binary==2.9.10

# Install dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Install UV for Prisma (if needed)
RUN pip install uv

# Copy application code
COPY . .

# Generate Prisma client
RUN uv run prisma generate

# Create required directories
RUN mkdir -p outputs research_papers db logs

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8000}/health || exit 1

# Run the application with dynamic port
CMD ["sh", "-c", "uvicorn app.main:app --host 0.0.0.0 --port ${PORT:-8000}"]
